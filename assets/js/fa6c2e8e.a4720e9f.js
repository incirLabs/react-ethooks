"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[460],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(y,s(s({ref:t},p),{},{components:r})):n.createElement(y,s({ref:t},p))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3532:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={id:"types",title:"Types",sidebar_position:4},s=void 0,i={unversionedId:"types",id:"types",title:"Types",description:"Types used in React Ethooks.",source:"@site/docs/types.md",sourceDirName:".",slug:"/types",permalink:"/react-ethooks/types",draft:!1,editUrl:"https://github.com/incirLabs/react-ethooks/tree/main/packages/react-ethooks/docs/docs/types.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"types",title:"Types",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"useNetwork",permalink:"/react-ethooks/hooks/use-network"}},c={},l=[{value:"JsonRpcError",id:"jsonrpcerror",level:2},{value:"ContractResult",id:"contractresult",level:2},{value:"Chain",id:"chain",level:2},{value:"Units",id:"units",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Types used in React Ethooks."),(0,a.kt)("h2",{id:"jsonrpcerror"},"JsonRpcError"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface JsonRpcError extends Error {\n  code: number;\n  message: string;\n  data?: unknown;\n  stack?: string;\n}\n")),(0,a.kt)("h2",{id:"contractresult"},"ContractResult"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type ContractResult = {status: false; error: JsonRpcError} | {status: true; data: any};\n")),(0,a.kt)("h2",{id:"chain"},"Chain"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type ChainObject = {\n  chainId: number;\n  rpcUrls: string[];\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string;\n    decimals: 0 | 18;\n  };\n  blockExplorerUrls: string[];\n};\n\ntype DefaultChainNames = 'mainnet' | 'ropsten' | 'rinkeby' | 'goerli' | 'kovan';\n\ntype Chain = ChainObject | DefaultChainNames;\n")),(0,a.kt)("h2",{id:"units"},"Units"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type UnitNames = 'wei' | 'kwei' | 'mwei' | 'gwei' | 'szabo' | 'finney' | 'ether';\ntype FormatUnitsName = number | UnitNames;\n")))}d.isMDXComponent=!0}}]);